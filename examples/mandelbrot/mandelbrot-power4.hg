#include <stdio.h> /* -*- c -*- */
#include <stdlib.h>

typedef double tReal;
typedef struct { tReal re, im; } tComplex;
typedef int (*pifdd) (double re, double im);

double ConstZero =   0.0f;
double ConstModulo = 4.0f;

#cpu power4

void compileAdd(int Dest, int Src1, int Src2)
{
#[
  fadd f(Dest), f(Src1), f(Src2)
  fadd f(Dest+1), f(Src1+1), f(Src2+1)
]#
} /* compileAdd */

void compileMul(int Dest, int a, int b, int tmp)
{
#[

  fmul  f(tmp),    f(a+1), f(b+1)
  fmsub f(Dest),   f(a),   f(b),   f(tmp)
  fmul  f(tmp),    f(a+1), f(b)
  fmadd f(Dest+1), f(a),   f(b+1), f(tmp)
]#
} /* compileMul */


pifdd isInSetCompile(int limit, int colorMapSize)
{
  insn *code= (insn *)calloc(64, sizeof(insn));
  // Floating registers 1 & 2 contain input parameter
  // Floating registers 3 & 4 contain Z
  #[	.org	code  
	lfd f0, 0, r3

  ]#;
  compileAdd(0, 2, 0);
  compileMul(2, 4, 6, 8);
  #[
    blr
    ]#
    return (pifdd) code;
}

int main(int argc, char * argv[])
{
  pifdd myFunction;
  myFunction = isInSetCompile(256, 256);
  myFunction (0.0f, 0.0f);
  return 0;
}
